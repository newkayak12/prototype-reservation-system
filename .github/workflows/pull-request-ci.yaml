name: Pull Request CI
on:
  pull_request:
    branches:
      - master
      - main

permissions:
  id-token: write
  contents: read
  checks: write  # ‚úÖ Check Run ÏÉùÏÑ±ÏùÑ ÏúÑÌï¥ Î∞òÎìúÏãú ÌïÑÏöî
  pull-requests: write

jobs:
  adapter-module-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
      - name: Run tests and coverage
        run: ./gradlew :adapter-module:test :adapter-module:jacocoTestReport
      - name: Upload adapter-module Jacoco
        uses: actions/upload-artifact@v4
        with:
          name: adapter-jacoco
          path: adapter-module/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Upload adapter-module test result
        uses: actions/upload-artifact@v4
        with:
          name: adapter-test-results
          path: adapter-module/build/test-results/**/TEST-*.xml
  application-module-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
      - name: Run tests and coverage
        run: ./gradlew :application-module:test :application-module:jacocoTestReport
      - name: Upload application-module Jacoco
        uses: actions/upload-artifact@v4
        with:
          name: application-jacoco
          path: application-module/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Upload adapter-module test result
        uses: actions/upload-artifact@v4
        with:
          name: application-test-results
          path: application-module/build/test-results/**/TEST-*.xml
  core-module-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
      - name: Run tests and coverage
        run: ./gradlew :core-module:test :core-module:jacocoTestReport
      - name: Upload core-module Jacoco
        uses: actions/upload-artifact@v4
        with:
          name: core-jacoco
          path: core-module/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Upload adapter-module test result
        uses: actions/upload-artifact@v4
        with:
          name: core-test-results
          path: core-module/build/test-results/**/TEST-*.xml

  publish-test-result:
    needs:
      - adapter-module-test
      - application-module-test
      - core-module-test
    runs-on: ubuntu-latest
    steps:
    - name: Download adapter test-results
      uses: actions/download-artifact@v4
      with:
        name: adapter-test-results
        path: test-results/adapter
    - name: Download application test-results
      uses: actions/download-artifact@v4
      with:
        name: application-test-results
        path: test-results/application
    - name: Download core test-results
      uses: actions/download-artifact@v4
      with:
        name: core-test-results
        path: test-results/core
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          test-results/**/TEST-*.xml
        comment_mode: failures
        comment_title: "üß™ Test Results"
        check_name: "Test Results"
        fail_on: "test failures"
        action_fail: true

  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs:
      - adapter-module-test
      - application-module-test
      - core-module-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: corretto

      - name: Download adapter jacoco
        uses: actions/download-artifact@v4
        with:
          name: adapter-jacoco
          path: jacoco/adapter
      - name: Download application jacoco
        uses: actions/download-artifact@v4
        with:
          name: application-jacoco
          path: jacoco/application
      - name: Download core jacoco
        uses: actions/download-artifact@v4
        with:
          name: core-jacoco
          path: jacoco/core
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/src/test/**/*
            -Dsonar.coverage.exclusions=**/src/**/config/**/*.kt,**/src/**/dto/**/*.kt,**/src/**/exception/**/*.kt,**/src/**/mapper/**/*.kt,**/src/**/factory/**/*.kt,**/src/**/entity/**/*.kt,**/src/**/adapter/**/*.kt,**/src/**/repository/**/*.kt,**/*Config.kt,**/*Dto.kt,**/*Request.kt,**/*Response.kt,**/*Exception.kt,**/*Factory.kt,**/*Entity.kt,**/*Adapter.kt,**/*Repository.kt,**/*.sql,**/*.gradle.kts
            -Dsonar.coverage.jacoco.xmlReportPaths=jacoco/adapter/jacocoTestReport.xml,jacoco/application/jacocoTestReport.xml,jacoco/core/jacocoTestReport.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  codecov-upload:
    name: Upload Coverage to Codecov
    runs-on: ubuntu-latest
    needs:
      - adapter-module-test
      - application-module-test
      - core-module-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto

      - name: Download adapter jacoco
        uses: actions/download-artifact@v4
        with:
          name: adapter-jacoco
          path: jacoco/adapter

      - name: Download application jacoco
        uses: actions/download-artifact@v4
        with:
          name: application-jacoco
          path: jacoco/application

      - name: Download core jacoco
        uses: actions/download-artifact@v4
        with:
          name: core-jacoco
          path: jacoco/core

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # public repoÎ©¥ ÏÉùÎûµ Í∞ÄÎä•
          files: |
            jacoco/adapter/jacocoTestReport.xml
            jacoco/application/jacocoTestReport.xml
            jacoco/core/jacocoTestReport.xml
          flags: kotlin
          fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs:
      - adapter-module-test
      - application-module-test
      - core-module-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test
